@using System.Net.NetworkInformation
@using MezzClass0._1.Models
@using Microsoft.AspNet.Identity
@model MezzClass0._1.Models.TProblema

@functions {
    private string SaberExt(string name)
    {
        string ext = "";
        for (int i = name.Count() - 1; i >= 0; i--)
        {
            if (name[i] == '.')
                break;
            ext += name[i];
        }
        string fin = "";
        for (int i = ext.Count() - 1; i >= 0; i--)
        {
            fin += ext[i];
        }
        return fin;
    }
    private bool CompararCadenas(string x, string y)// Comparar sin importar mayusculas y minusculas.
    {
        if (String.Compare(x, y, StringComparison.OrdinalIgnoreCase) == 0)
            return true;
        return false;
    }

}

@{
    ViewBag.Title = "Editar";
    var db = new MezClassEntities();
    var param = db.TProblemaParametro.Include("TParametro").Where(par => par.IdProblema == Model.IdProblema).ToList();


}




@using (Html.BeginForm(Html.BeginForm("Edit", "TProblemas", FormMethod.Post,
    new { @enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Problema</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdProblema)
        <div class="form-group">
            @if (ViewBag.error == -1)
            {
                <div class="alert-warning">Ya existe un Problema con ese titulo en este Universo</div>
            }
            <label>Título del Problema</label>
            @Html.EditorFor(model => model.titulo, new { htmlAttributes = new { @class = "form-control", @placeholder = "   50 caracteres", @required = "required" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IdUniverso, "Universo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdUniverso", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdUniverso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-horizontal">
            <label>Categor&iacute;a</label>
            <select class="lista">
                <option>Agricultura</option>
                <option>Industria</option>
                <option>Econom&iacute;a</option>
            </select>
        </div>


        <div class="form-horizontal">
            <label>Aplicaci&oacute;n</label>
            <select class="lista">
                <option>Apicultura</option>
                <option>Cultivo de Tub&eacute;rculos</option>
                <option>Cultivo de Hortalizas</option>
            </select>
        </div>
        <div class="form-group">
            <input type="text" name="Complejidad" value="0" hidden="hidden" />
        </div>

       
      
        <div style="height: 10px"></div>
        @if (ViewBag.items != null)
        {
            <div class="panel panel-primary" style="width: 500px" id="panelr">
                <div class="panel-heading">
                    Recursos
                </div>

                <table class="webgrid-table" id="tablerec" style="width: 500px">
                    <tr>
                        <th>Archivo</th>
                        <th>Tipo</th>
                        <th>Link</th>
                        <th>Eliminar</th>
                    </tr>
                    @{
                        var band = false;
                    }
                    @for (var i = 0; i <= ViewBag.items.Count - 1; i++)
                    {
                        if (CompararCadenas(SaberExt(ViewBag.items[i].ToString()), "avi") || CompararCadenas(SaberExt(ViewBag.items[i].ToString()), "mp4"))
                        {

                            <tr id="@SaberExt(ViewBag.items[i].ToString())">

                                <td>
                                    <span id="archivo">@ViewBag.items[i].ToString()</span>

                                </td>
                                <td>
                                    <span id="tipoarch">@SaberExt(@ViewBag.items[i].ToString())</span>

                                </td>
                                <td>
                                    @Html.ActionLink("Descargar", "Download", new { filename = ViewBag.items[i].ToString(), ruta = @"E:\Files\" + @Model.IdProblema + @"\" }, new { @class = "botonlink" })
                                </td>
                                <td>
                                    <div style="text-align: center;">
                                        <button type="button" class="btn btn-default btn-sm" id="delres">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </button>
                                    </div>
                                </td>

                            </tr>

                            band = true;
                            break;
                        }

                    }
                    @if (band == false)
                    {
                        <tr>
                            <td>@Html.TextBox("file", "", new {type = "file", id = "file1", name = "fileUploadMulti"})</td>
                            <td>
                                <div style="text-align: center;">
                                    <div>
                                        <label>Video(mp4,avi)</label>
                                    </div>
                                </div>
                            </td>

                        </tr>
                    }
                    @{
                        var band1 = false;
                    }
                    @for (var i = 0; i <= ViewBag.items.Count - 1; i++)
                    {
                        if (CompararCadenas(SaberExt(ViewBag.items[i].ToString()), "jpg") || CompararCadenas(SaberExt(ViewBag.items[i].ToString()), "jpeg") || CompararCadenas(SaberExt(ViewBag.items[i].ToString()), "png"))
                        {
                            <tr id="@SaberExt(ViewBag.items[i].ToString())">
                                <td>
                                    <span id="archivo">@ViewBag.items[i].ToString()</span>

                                </td>
                                <td>
                                    <span id="tipoarch">@SaberExt(@ViewBag.items[i].ToString())</span>

                                </td>
                                <td>
                                    @Html.ActionLink("Descargar", "Download", new { filename = ViewBag.items[i].ToString(), ruta = @"E:\Files\" + @Model.IdProblema + @"\" }, new { @class = "botonlink" })
                                </td>
                                <td>
                                    <div style="text-align: center;">
                                        <button type="button" class="btn btn-default btn-sm" id="delres">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            band1 = true;
                            break;
                        }

                    }
                    @if (band1 == false)
                    {

                        <tr>
                            <td>@Html.TextBox("imagen", "", new {type = "file", id = "file2", name = "fileUploadMulti"})</td>
                            <td>
                                <div style="text-align: center;">
                                    <div>
                                        <label>Imagen(jpg,png)</label>
                                    </div>
                                </div>
                            </td>

                        </tr>
                    }
                    @{
                        var band2 = false;
                    }
                    @for (var i = 0; i <= ViewBag.items.Count - 1; i++)
                    {
                        if (CompararCadenas(SaberExt(ViewBag.items[i].ToString()), "xls") || CompararCadenas(SaberExt(ViewBag.items[i].ToString()), "xlsx") || CompararCadenas(SaberExt(ViewBag.items[i].ToString()), "doc")
                            || CompararCadenas(SaberExt(ViewBag.items[i].ToString()), "docx") || CompararCadenas(SaberExt(ViewBag.items[i].ToString()), "pdf"))
                        {
                            <tr id="@SaberExt(ViewBag.items[i].ToString())">
                                <td>
                                    <span id="archivo">@ViewBag.items[i].ToString()</span>

                                </td>
                                <td>
                                    <span id="tipoarch">@SaberExt(@ViewBag.items[i].ToString())</span>

                                </td>
                                <td>
                                    @Html.ActionLink("Descargar", "Download", new { filename = ViewBag.items[i].ToString(), ruta = @"E:\Files\" + @Model.IdProblema + @"\" }, new { @class = "botonlink" })
                                </td>
                                <td>
                                    <div style="text-align: center;">
                                        <button type="button" class="btn btn-default btn-sm" id="delres">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            band2 = true;
                            break;
                        }

                    }
                    @if (band2 == false)
                    {


                        <tr>
                            <td>@Html.TextBox("documento", "", new {type = "file", id = "file3", name = "fileUploadMulti"})</td>
                            <td>
                                <div style="text-align: center;">
                                    <div>
                                        <label>Documento(word,pdf,excel)</label>
                                    </div>
                                </div>
                            </td>

                        </tr>
                    }
                    <tr>
                        <td id="video" hidden="">
                            <label>Video(mp4,avi)</label>@Html.TextBox("file", "", new {type = "file", id = "file1", name = "fileUploadMulti"})
                        </td>
                    </tr>
                    <tr>
                        <td id="imagen" hidden=""><label>Imagen(jpg,png)</label>@Html.TextBox("imagen", "", new {type = "file", id = "file2", name = "fileUploadMulti"})</td>
                    </tr>
                    <tr>
                        <td id="documento" hidden=""> <label>Documento(word,pdf,excel)</label>@Html.TextBox("documento", "", new {type = "file", id = "file3", name = "fileUploadMulti"})</td>
                    </tr>
                </table>

            </div>
        }
        else
        {
            <fieldset>
                <legend>Recursos</legend>
                <table class="table-bordered">
                    <tr>
                        <td><label>Video(mp4,avi)</label>@Html.TextBox("file", "", new { type = "file", id = "file1", name = "fileUploadMulti" })</td>
                        <td><label>Imagen(jpg,png)</label>@Html.TextBox("imagen", "", new { type = "file", id = "file2", name = "fileUploadMulti" })</td>
                        <td><label>Documento(word,pdf,excel)</label>@Html.TextBox("documento", "", new { type = "file", id = "file3", name = "fileUploadMulti" })</td>
                    </tr>
                </table>

            </fieldset>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Enunciado, htmlAttributes: new { @class = "control-label col-md-2",id="enunc" })
            <div class="jumbotron">
                @Html.TextAreaFor(model => model.Enunciado, 5, 60, new { @id = "text" })
                @Html.ValidationMessageFor(model => model.Enunciado, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.ejemplo, "Problema Ejemplo", htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ejemplo)
                    @Html.ValidationMessageFor(model => model.ejemplo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group" id="sol">
            @Html.LabelFor(model => model.Solucion, htmlAttributes: new { @class = "control-label col-md-2", id = "enunc" })
            <div class="jumbotron">
                @Html.TextAreaFor(model => model.Solucion, 5, 60, new { @id = "text" })
                @Html.ValidationMessageFor(model => model.Solucion, "", new { @class = "text-danger" })
            </div>
        </div>



        <input type="text" name="json" value="" id="jsonid" hidden="" />
        <input type="text" name="usuario" value="@User.Identity.GetUserId()" hidden="">
        <div class="panel panel-primary" style="width: 500px">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="modal" href="#myModal" class="btn btn-success btn-xs" id="asig">Asignar</a>
                    <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
                        <span class="badge" style="background:#fff;color:#428BCA">Parámetros</span>
                    </a>
                </h4>
            </div>
            <table id="table" class="webgrid-table">
                <thead>
                    <tr>
                        <th style="width:15%" hidden="">
                            IDParam
                        </th>
                        <th>
                            Nombre
                        </th>
                        <th>
                            Descripcion
                        </th>
                        <th>
                            Peso
                        </th>
                        <th>
                            Valor
                        </th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var x in param)
                    {
                        string valorv = x.Valor.ToString().Replace(",", ".");
                        <tr>
                            <td hidden=""><span id="ID">@x.IdParametro</span></td>
                            <td><span id="nomb">@x.TParametro.NombParametro</span></td>
                            <td><span id="desc">@x.TParametro.descripcion</span></td>
                            <td><span id="peso">@x.TParametro.Peso</span></td>
                            <td><input type="text" id="valor" value="@valorv" name="valorv"></td>

                            <td>
                                <button type="button" class="btn btn-default btn-sm" id="deleteRow">
                                    <span class="glyphicon glyphicon-remove-sign"></span>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="botoncrear" id="Crear" />
            </div>
        </div>
    </div>

}
<span id="idp" hidden="">@Model.IdProblema</span>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Parametros</h4>
            </div>
            <div class="modal-body">
                @{
                    if (ViewBag.parametros.Count > 0)
                    {
                        
                    }

                    var grid1 = new WebGrid(ViewBag.parametros, canPage: true, rowsPerPage: 100);
                    grid1.Pager(WebGridPagerModes.All);


                    <div id="Parametros">
                        @grid1.GetHtml(

                        tableStyle: "webgrid-table",
                        headerStyle: "webgrid-header",
                        footerStyle: "webgrid-footer",
                        alternatingRowStyle: "webgrid-alternating-row",
                        rowStyle: "webgrid-row-style",
                        columns: grid1.Columns(
                            grid1.Column("", format: @<text>
                            <button type="button" class="btn btn-default btn-lg" id="Asignar">
                                <span class="glyphicon glyphicon-download-alt"></span>
                            </button>
                            </text>, style: "width:100px", canSort: false),

                                 grid1.Column("IdParametro","Numero", @<text> <span id="ID">@item.IdParametro</span></text>,"",false),
                                      grid1.Column("NombParametro", "Nombre", @<text> <span id="nomb">@item.NombParametro</span></text>),
                                                                        grid1.Column("descripcion", "Descripcion", @<text> <span id="desc">@item.descripcion</span></text>),
                            grid1.Column("Peso", "Peso", @<text> <span id="peso">@item.Peso</span></text>)



                                                                             ))
                    </div>



                }

            </div>
        </div>
    </div>

</div>

<div>
    @Html.ActionLink("Atras", "Index", new { id = Model.IdUniverso, p = User.Identity.GetUserId() },new{@class="botonlink"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Content/Site.js")
}
<div class="modal fade" id="ModemMesj" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Mensaje</h4>
            </div>
            <div class="modal-body">
                Esto Eliminara el Recurso Actual del Servidor. Desea Continuar?
                <table class="webgrid-table" id="deltable">
                    <tr>
                        <th>
                            Recurso
                        </th>
                        <th>
                            Tipo
                        </th>
                    </tr>
                    <tbody></tbody>
                </table>
            
              
            </div>
        </div>

    </div>
</div>